x-net-config: &net-config
  network_mode: host
  ipc: host
  env_file: net.env

x-gpu-config: &gpu-config
  runtime: nvidia
  environment:
    - DISPLAY=${DISPLAY:?err}
    - NVIDIA_VISIBLE_DEVICES=all
    - NVIDIA_DRIVER_CAPABILITIES=all

x-cpu-config: &cpu-config
  environment:
    - DISPLAY=${DISPLAY:?err}
    - LIBGL_ALWAYS_SOFTWARE=1

services:
  # if you have NVDIA GPU and NVIDIA Container Toolkit, you can replace
  # "cpu-config" with "gpu-config"
  webots-local:
    image: husarion/webots:humble
    <<: [*net-config, *gpu-config]
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /dev/dri:/dev/dri
      - ./src:/mcs_ws/src
    command: bash -c 'cd /mcs_ws && source /opt/ros/humble/setup.bash && colcon build && source ./install/setup.bash && ros2 launch webots_ros2_cleverhive rosbot_launch.py gui:=true'

  webots-transitive:
    build:
      context: ./external/mcs_transitive
      dockerfile: Dockerfile
    privileged: true
    <<: [*net-config, *gpu-config]
    env_file:
      - ./external/mcs_transitive/.env
    restart: unless-stopped

  webots-mcs-bridge:
    build:
      context: ./external/mcs_bridge
      dockerfile: Dockerfile
    <<: [*net-config]
    env_file:
      - ./external/mcs_bridge/.env
    command: ["--bridge-type", "ros2"]
    depends_on:
      - webots-local

  webots-rviz:
    image: husarion/rviz2:humble
    <<: [*net-config, *gpu-config]
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./config/rosbot.rviz:/root/.rviz2/default.rviz
